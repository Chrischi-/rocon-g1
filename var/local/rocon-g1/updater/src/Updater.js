var _=require("underscore"),AdmZip=require("adm-zip"),async=require("async"),Beagle=require("../../core/Beagle"),checksum=require("checksum"),config=require("../../config/config"),exec=require("child_process").exec,fs=require("fs"),Hmmac=require("hmmac"),https=require("https"),md5=require("MD5"),moment=require("moment"),path=require("path"),recursive=require("recursive-fs"),LoggerInformation=require("../../logging/LoggerInformation.js"),logger=require("../../config/logger");"dev"==process.env.NODE_ENV&&(https.globalAgent.options.rejectUnauthorized=!1);var Updater=function(){_.bindAll(this);var a;a=fs.existsSync(config.eepromPath.bb)?config.eepromPath.bb:fs.existsSync(config.eepromPath.bbb)?config.eepromPath.bbb:config.eepromPath.bbbDebian,this._beagle=new Beagle(a,path.join(__dirname,"/../../version")),this._hmmac=new Hmmac({headerPrefix:"ROC",hash:"sha1",serviceLabel:"ROC",debug:!1})},fileExists=function(a){try{return fs.statSync(a),!0}catch(b){return!1}};Updater.prototype.run=function(a){var b=new LoggerInformation;b.isLoggingActivated()===!0&&(logger.transports.file.level="info");var c=this;async.waterfall([this._clean,this._beagle.getId,this._fetch],function(b){b?(logger.error("Updater: "+b),a(b)):async.waterfall([c._unzip,c._checksum,c._migrate,c._replace,c._restart],function(b){logger.error("Updater: "+b),a(b)})})},Updater.prototype._clean=function(a){logger.info("Updater: Start cleaning"),async.parallel([function(a){var b=config.updater.targetDir+".old";fs.existsSync(b)?recursive.rmdirr(b,a):a()},function(a){fs.existsSync(config.updater.tmpDir)?recursive.rmdirr(config.updater.tmpDir,a):a()},function(a){fs.existsSync(config.updater.tmpFile)?fs.unlink(config.updater.tmpFile,a):a()}],function(b){logger.error("Updater: "+b),a(b)})},Updater.prototype._fetch=function(a,b){var c=this;logger.info("Updater: Start fetching, Beagle",a,"here, asking ",config.rccs.host,"for new version. Current own version:",c._getCurrentVersion());var d="/installation/update/"+a+"/"+c._getCurrentVersion(),e={method:"GET",host:config.rccs.host,path:d,port:config.rccs.port};this._signRequest(e,"",function(a,d){a&&(logger.error("Updater: Could not sign request: "+a),b()),d.path=config.rccs.path+d.path;var e=https.request(d,function(a){if(200!==a.statusCode&&204!==a.statusCode)logger.error("Updater: Could not fetch update: status code "+a.statusCode),b();else if(204===a.statusCode)logger.info("Updater: No new Version on Server",config.rccs.host,". Current own version:",c._getCurrentVersion()),fs.unlinkSync(config.updater.lockPath);else{fs.mkdirSync(config.updater.tmpDir);var d=fs.createWriteStream(config.updater.tmpFile);d.on("close",function(){b()}),a.setEncoding("binary"),a.on("data",function(a){d.write(a,"binary")}),a.on("end",function(){d.end(),logger.info("File completely received, written to",config.updater.tmpFile)})}});e.on("error",function(a){return logger.error("Updater: could not fetch update: "+a),b("Updater: could not fetch update: "+a,null)}),e.end()})},Updater.prototype._unzip=function(a){logger.info("Updater: Start unzipping",config.updater.tmpFile);var b=new AdmZip(config.updater.tmpFile);b.extractAllTo(config.updater.tmpDir),fileExists(config.updater.tmpDir+"/version")?a():(logger.error("Updater: Unable to extract update archive"),a())},Updater.prototype._checksum=function(a){var b=this;logger.info("Updater: Validating checksum");var c={method:"GET",host:config.rccs.host,path:config.rccs.path+"/version/"+fs.readFileSync(config.updater.tmpDir+"/version")+"/checksum",port:config.rccs.port};this._signRequest(c,"",function(c,d){c&&(logger.error("Updater: Could not sign request to fetch checksum: "+c),a());var e=https.request(d,function(c){return 200!==c.statusCode&&204!==c.statusCode?(logger.error("Updater: Could not fetch update: status code "+c.statusCode),a()):(204===c.statusCode&&(logger.info("Updater: No new Version on Server",config.rccs.host,". Current own version:",b._getCurrentVersion()),fs.unlinkSync(config.updater.lockPath)),void c.on("data",function(b){checksum.file(config.updater.tmpFile,function(c,d){return c&&(logger.error("Updater: could not generate checksum from update: "+c),a()),b!=d?(logger.error("Updater: Checksum does not match: "+b+" "+d),a()):void a(null)})}))});e.on("error",function(b){return logger.error("Updater: Could not fetch checksum: "+b),a()}),e.end()})},Updater.prototype._replace=function(a){logger.info("Updater: Replacing current version");var b=config.updater.targetDir+".old";fs.renameSync(config.updater.targetDir,b),fs.renameSync(config.updater.tmpDir,config.updater.targetDir),fs.unlinkSync(config.updater.tmpFile),recursive.rmdirr(b,function(b){logger.error("Updater: "+b),a()})},Updater.prototype._restart=function(a){logger.info("Updater: Restarting beagle"),exec("/sbin/reboot"),a()},Updater.prototype._migrate=function(a){var b=config.updater.tmpDir+"/migrate.js";fileExists(b)?(logger.info("Updater: Running migration"),exec("/usr/local/bin/node "+b,{cwd:config.updater.tmpDir},function(b,c){return b?(logger.error("Updater: Could not run migration script: "+b),a()):(c&&logger.info(c),a(null))})):(logger.info("Updater: No migration found"),a())},Updater.prototype._getCurrentVersion=function(){var a=config.updater.targetDir+"/version";return fileExists(a)?parseInt(fs.readFileSync(a)):0},Updater.prototype._signRequest=function(a,b,c){var d=this;a.headers||(a.headers={}),a.headers["content-type"]||(a.headers["content-type"]="application/text"),a.headers["content-md5"]||(a.headers["content-md5"]=md5(b)),a.headers.date||(a.headers.date=moment().utc().format("ddd, DD MMM YYYY HH:mm:ss ZZ")),async.parallel({key:this._beagle.getId,secret:this._beagle.getSecret},function(b,e){if(b)return logger.error("Updater: "+b),c();if(!e.secret)return logger.error("Updater: Secret not found"),"Updater: Secret not found";var f=d._hmmac.signHttpRequest({accessKeyId:e.key,accessKeySecret:e.secret},a);c(null,f)})},module.exports=Updater;