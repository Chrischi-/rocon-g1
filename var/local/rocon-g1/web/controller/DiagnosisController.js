var config=require("../../config/config"),_=require("underscore"),admZip=require("adm-zip"),fs=require("fs"),moment=require("moment"),DiagnosisController=function(a){_.bindAll(this),this._eventEmitter=a,this._tickCounter=0;var b=this;this._eventEmitter.on("Refresher.Ticked",function(a){b._tickCounter=a})};DiagnosisController.prototype.get=function(a,b){return b.render("diagnosis",{diagnosisReady:this._tickCounter>0})},DiagnosisController.prototype["export"]=function(a,b){function c(){b.attachment(moment().format("[export-logging_]YYYY-MM-DD[_]HH-mm-ss[.zip]")),b.setHeader("Content-Type","application/zip"),b.send(f)}var d=new admZip,e=config.logger.zipPath;if(config.logger.logFiles.forEach(function(a){fs.existsSync(a)&&d.addLocalFile(a)}),d.writeZip(e),!fs.existsSync(e))return a.flash("error","web.diagnosis.zipFile.failure"),b.redirect("/web/diagnosis");var f=fs.readFileSync(e);this._tickCounter>0?c():this._eventEmitter.once("Refresher.Ticked",function(){c()})},DiagnosisController.prototype.setLogging=function(a,b){var c=config.logger.loggingConfigPath,d="",e="";return fs.existsSync(c)?(d=fs.readFileSync(c,"UTF8"),e=JSON.parse(d)):a.flash("error","web.diagnosis.change.failure"),"on"===a.body.logging?(a.flash("success","web.diagnosis.change.on"),e.logging=!0):(a.flash("success","web.diagnosis.change.off"),e.logging=!1),fs.writeFileSync(c,JSON.stringify(e),"UTF8",function(b){b&&a.flash("error","web.diagnosis.change.failure")}),b.redirect("/web/diagnosis")},module.exports=DiagnosisController;